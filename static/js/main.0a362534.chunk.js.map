{"version":3,"sources":["services/api.js","pages/cadastro/index.js","pages/login/index.js","pages/main/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["axios","create","baseURL","RegisterScreen","props","className","id","htmlFor","name","type","to","value","LoginScreen","Main","useState","p1","setP1","p2","setP2","document","querySelector","getElementById","valor1","setValor1","valor2","setValor2","atribuiValores","escolhido","classList","contains","escolheuTesoura","toggle","toggleAttribute","escolheuPedra","escolheuPapel","onClick","length","Routes","basename","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a362534.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst api=axios.create({ baseURL:'http://localhost:3002'});\r\n\r\nexport default api;","\r\nimport React from 'react';\r\n\r\nimport './style.css'\r\n\r\n\r\nimport api from '../../services/api'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nconst RegisterScreen = (props)=>{\r\n\r\n    const cadastrar=async ()=>{\r\n\r\n        const response=await api.post\r\n    }\r\n    \r\n    return (\r\n        <div className=\"register-background\">\r\n            <div className=\"register-container\">\r\n\r\n            <h2 id=\"register-title\">Seja um membro</h2>\r\n\r\n                <form >\r\n                    <label htmlFor=\"login\">Usuario</label>\r\n                    <input name=\"login\" type=\"text\" id=\"register-login\"   ></input>\r\n\r\n                    <label htmlFor=\"password\">Senha</label>\r\n                    <input name=\"password\" type=\"password\" id=\"register-password\"  ></input>\r\n\r\n                    <Link to='/'>Cadastrar</Link>\r\n                \r\n                </form>\r\n\r\n                <div id=\"register-container-login\">\r\n                    <Link to='/' value=\"submit\" id=\"register-login\">ja tenho uma conta</Link>\r\n                </div>\r\n             </div>\r\n            \r\n        </div>\r\n        \r\n    )}\r\n\r\n\r\nexport default RegisterScreen;","\r\nimport React from 'react';\r\nimport './style.css'\r\n\r\nimport api from '../../services/api'\r\n\r\nimport  {Link} from 'react-router-dom'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst LoginScreen = (props)=>{\r\n\r\n\r\n\r\n    const autenticar=async()=>{\r\n\r\n        const valor=verificaUsuario(document.querySelector('input#login-username').value);\r\n        const senha=document.querySelector('input#login-password').value;\r\n        const username=document.querySelector('input#login-username').value;\r\n        const usuario=carregarUsuario(valor);\r\n\r\n        \r\n\r\n        if(usuario.password!==senha||usuario.username!==username){\r\n            alert(\"USUARIO OU SENHA INCORRETA\");\r\n        }\r\n        else{\r\n            alert(\"tudo certo\");\r\n        }\r\n\r\n    }\r\n    \r\n    const carregarUsuario=async(id)=>{\r\n\r\n        if(id!=null){\r\n\r\n            const response=await api.get(`/register/${id}`);\r\n        \r\n            return response.data\r\n\r\n        }\r\n\r\n        \r\n\r\n    }\r\n\r\n    const componentDidMount=()=>{\r\n        this.loadProducts();\r\n    }\r\n\r\n    const verificaUsuario=async(name)=>{\r\n\r\n\r\n       \r\n\r\n        const response=await api.get(`/register/username?nome=${name}`);\r\n\r\n        \r\n        \r\n\r\n        if(response.data!=null){\r\n            return null;\r\n        }\r\n        else{\r\n            return response.data;\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-background\">\r\n            <div className=\"login-container\">\r\n\r\n                <h2 id=\"login-title\">Projeto ppt</h2>\r\n\r\n                <form >\r\n                    <label htmlFor=\"username\">Usuario</label>\r\n                    <input name=\"username\" type=\"text\" id=\"login-username\"  ></input>\r\n\r\n                    <label htmlFor=\"password\">Senha</label>\r\n                    <input name=\"password\" type=\"password\" id=\"login-password\"  ></input>\r\n\r\n                    \r\n                    \r\n                    <Link to=\"/main\" value=\"submit\">Enter</Link>\r\n\r\n                    \r\n                </form>\r\n\r\n                <div id=\"login-container-cadastrar\">\r\n                    <Link to=\"/cadastro\" id=\"login-cadastrar\">Cadastrar</Link>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default LoginScreen;","\r\nimport React, { useState } from 'react';\r\n\r\nimport api from '../../services/api'\r\n\r\n\r\nimport './style.css'\r\n\r\n\r\n\r\n\r\nconst Main = (props)=>{\r\n\r\n    let [p1,setP1]=useState(0)\r\n    let [p2,setP2]=useState(0)\r\n\r\n    let player1=document.querySelector(\"#p1\")\r\n    let player2=document.querySelector(\"#p2\")\r\n\r\n    let pedra=document.getElementById('pedra')\r\n    let papel=document.getElementById('papel')\r\n    let tesoura=document.getElementById('tesoura')\r\n\r\n    let [valor1,setValor1]=useState(\"\")\r\n    let [valor2,setValor2]=useState(\"\")\r\n    \r\n    const atribuiValores=(escolhido)=>{\r\n        let player1=document.querySelector(\"#p1\")\r\n        \r\n\r\n            if(!player1.classList.contains(\"hidden\")){\r\n                setValor1(escolhido)\r\n            }\r\n            else{\r\n                setValor2(escolhido)\r\n            }\r\n        \r\n          \r\n\r\n    }\r\n\r\n    const escolheuTesoura=()=>{\r\n        document.getElementById(\"tesoura\").classList.toggle(\"pressed\")\r\n        document.getElementById(\"pedra\").classList.toggle(\"opacity\")\r\n        document.getElementById(\"pedra\").toggleAttribute(\"disabled\")\r\n        document.getElementById(\"papel\").classList.toggle(\"opacity\")\r\n        document.getElementById(\"papel\").toggleAttribute(\"disabled\")\r\n    }\r\n\r\n    const escolheuPedra=()=>{\r\n        document.getElementById(\"pedra\").classList.toggle(\"pressed\");\r\n        document.getElementById(\"papel\").classList.toggle(\"opacity\");\r\n        document.getElementById(\"papel\").toggleAttribute(\"disabled\");\r\n        document.getElementById(\"tesoura\").classList.toggle(\"opacity\");\r\n        document.getElementById(\"tesoura\").toggleAttribute(\"disabled\");\r\n    }\r\n\r\n    const escolheuPapel=()=>{\r\n        document.getElementById(\"papel\").classList.toggle(\"pressed\");\r\n        document.getElementById(\"pedra\").classList.toggle(\"opacity\");\r\n        document.getElementById(\"pedra\").toggleAttribute(\"disabled\");\r\n        document.getElementById(\"tesoura\").classList.toggle(\"opacity\");\r\n        document.getElementById(\"tesoura\").toggleAttribute(\"disabled\");\r\n    }\r\n    \r\n    return (\r\n\r\n        <div className=\"home-background\">\r\n\r\n            <div className=\"home-container\">\r\n\r\n                <div className=\"title-container\">\r\n                    <h1 id=\"title1\">PEDRA</h1>\r\n                    <h1 id=\"title2\">PAPEL</h1>\r\n                    <h1 id=\"title3\">TESOURA</h1>\r\n                </div>\r\n            \r\n                <div className=\"player-container\">\r\n\r\n                    <h2  id=\"p1\"className=\"player\">Player 1</h2>\r\n                    <h2 id=\"p2\" className=\"player hidden\">Player 2</h2>\r\n                   \r\n                \r\n                </div>\r\n\r\n                <div className=\"selection-container\">\r\n\r\n                    <button  id=\"pedra\" onClick={()=>{\r\n                        escolheuPedra();\r\n                        atribuiValores(\"pedra\")\r\n                    }}></button>\r\n                    <button onClick={()=>{\r\n                        escolheuPapel();\r\n                        atribuiValores(\"papel\")\r\n                    }} id=\"papel\"></button>\r\n                    <button  id=\"tesoura\" onClick={()=>{\r\n                        escolheuTesoura();\r\n                        atribuiValores(\"tesoura\")  ; \r\n                        \r\n                    }}></button>\r\n                </div>\r\n                <div className=\"submit-container\">\r\n                    <div>\r\n                        <button onClick={()=>{\r\n                            \r\n                            if(valor1.length>4&&valor2.length>4){\r\n                            switch (1>0) {\r\n                                \r\n                                case (valor1===\"tesoura\"&&valor2===\"pedra\"):\r\n                                    setP2(p2+1)\r\n                                    setValor1(\"\")\r\n                                    setValor2(\"\")\r\n                          \r\n                                    break;\r\n                                \r\n                                case (valor1===\"tesoura\"&&valor2===\"papel\"):\r\n                                    setP1(p1+1)\r\n                                    setValor1(\"\")\r\n                                    setValor2(\"\")\r\n                                 \r\n                                    break;\r\n\r\n                                case (valor1===\"papel\"&&valor2===\"pedra\"):\r\n                                    setP2(p1+1)\r\n                                    setValor1(\"\")\r\n                                    setValor2(\"\")\r\n                                    break;\r\n                                \r\n                                case (valor1===\"papel\"&&valor2===\"tesoura\"):\r\n                                    setP1(p2+1)\r\n                                    setValor1(\"\")\r\n                                    setValor2(\"\")\r\n                                    break;\r\n\r\n                                case (valor1===\"pedra\"&&valor2===\"papel\"):\r\n                                    setP2(p2+1)\r\n                                    setValor1(\"\")\r\n                                    setValor2(\"\")\r\n                                  \r\n                                    break;\r\n                                \r\n                                case (valor1===\"pedra\"&&valor2===\"tesoura\"):\r\n                                    setP1(p1+1)\r\n                                    setValor1(\"\")\r\n                                    setValor2(\"\")\r\n                                  \r\n                                    break;\r\n\r\n                                default:\r\n                                    break;\r\n                            }\r\n                        }\r\n                        else{\r\n                            if(valor1===\"pedra\"||valor2===\"pedra\"){\r\n                                escolheuPedra();\r\n                            }\r\n                            else if(valor1===\"papel\"||valor2===\"papel\"){\r\n                                escolheuPapel();\r\n                            }\r\n                           else if(valor1===\"tesoura\"||valor2===\"tesoura\"){\r\n                                escolheuTesoura();\r\n                            }\r\n                        }\r\n                            document.querySelector('#p1').classList.toggle(\"hidden\")\r\n                            document.querySelector('#p2').classList.toggle(\"hidden\")\r\n\r\n                            \r\n                            \r\n\r\n                            \r\n                        }}>\r\n                            SUBMIT\r\n                        </button>\r\n\r\n                        <button id=\"botao-placar\" onClick={()=>{\r\n                            setP1(0)\r\n                            setP2(0)\r\n                            setValor1(\"\")\r\n                            setValor2(\"\")                            \r\n\r\n                            \r\n                        }}>\r\n                            RESET\r\n                        </button>\r\n                    </div>\r\n                   \r\n                <h1 id='placar'>{p1}-{p2}</h1>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        </div>\r\n       \r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default Main;","\r\nimport React from 'react'\r\nimport RegisterScreen from './pages/cadastro/index'\r\nimport LoginScreen from './pages/login/index'\r\nimport {BrowserRouter,Switch,Route} from 'react-router-dom'\r\nimport Main from './pages/main/index'\r\n\r\n\r\n\r\nconst Routes=()=>(\r\n\r\n    <BrowserRouter basename={\"https://pedrocottabadaro.github.io/ProjetoPPT/\"}>\r\n        <Switch>\r\n        <Route exact path=\"\" component={LoginScreen}/>\r\n        <Route exact path=\"cadastro\" component={RegisterScreen}/>\r\n        <Route exact path=\"main\" component={Main}/>\r\n\r\n\r\n        </Switch>\r\n    \r\n    </BrowserRouter>\r\n);\r\n\r\n\r\nexport default Routes;","import React from 'react';\nimport './App.css';\nimport Routes from './routes'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}